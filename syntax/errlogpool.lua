vim.b.current_syntax = 'errlogpool'

vim.wo.conceallevel = 2

-- Basic regex matches
vim.fn.matchadd('log_linenumber', '\\d\\+:')
vim.fn.matchadd('log_string', '".+\\{-}"')
vim.fn.matchadd('log_number', '0x[0-9a-fA-F]*\\|\\[<[0-9a-f]\\+>\\]\\|\\<\\d[0-9a-fA-F]*')
vim.fn.matchadd('log_date', '\\(Jan\\|Feb\\|Mar\\|Apr\\|May\\|Jun\\|Jul\\|Aug\\|Sep\\|Oct\\|Nov\\|Dec\\) [ 0-9]\\d *')
vim.fn.matchadd('log_date', '\\d\\{4}-\\d\\d-\\d\\d')
vim.fn.matchadd('log_time', '\\d\\d:\\d\\d:\\d\\d\\.\\d\\{3}\\s-\\d\\+:\\d\\+')

-- Section custom to errlogpool.txt
vim.fn.matchadd('log_error', '\\(user.err\\)')
vim.fn.matchadd('log_error', 'COMMAND_FAILURE.*freeus_fence.*')
vim.fn.matchadd('log_info', '\\(user\\.info\\|user\\.notice\\)')
vim.fn.matchadd('log_debug', '\\(user\\.debug\\)')
vim.fn.matchadd('log_daemon', '\\(daemon\\.debug\\|daemon\\.info\\)')
vim.fn.matchadd('log_keywords', 'main start version:')
vim.fn.matchadd('log_keywords', '\\*\\*\\*.*\\*\\*\\*')
vim.fn.matchadd('log_keywords', 'Enable VoLTE')
vim.fn.matchadd('log_keywords', 'EnableVolte: 1, volteStatus: 0')
vim.fn.matchadd('log_keywords', 'Reset MCU')
vim.fn.matchadd('log_keywords', 'Go back suspend')
vim.fn.matchadd('log_keywords', 'PreviousMode 01 mode to 02 mode')
vim.fn.matchadd('log_keywords', 'Set Current Mode to')
vim.fn.matchadd('log_keywords', 'Usb charger Online :')
vim.fn.matchadd('log_keywords', 'Usb charger Offline')
vim.fn.matchadd('log_keywords', 'dbm, snr')
vim.fn.matchadd('log_keywords', '\\[OTACommandService\\]\\[RunCommand\\]')
vim.fn.matchadd('log_keywords', '\\[OTAReportService\\] ReportDeviceEvent')
vim.fn.matchadd('log_keywords', '\\[OTAReportService\\] AckCommand')
vim.fn.matchadd('log_keywords', '\\[SOCKET\\] send success')
vim.fn.matchadd('log_keywords', 'Data Connect, current status')
vim.fn.matchadd('log_keywords', 'VoIP service status(')
vim.fn.matchadd('log_keywords', 'Roaming status:')
vim.fn.matchadd('log_keywords', 'mnc:')
vim.fn.matchadd('log_keywords', 'ril_data_dsi_callback: data profile')
vim.fn.matchadd('log_keywords', 'ril_data_connect_request:')
vim.fn.matchadd('log_keywords', 'data connection is disconnected')
vim.fn.matchadd('log_keywords', 'received CONNACK')
vim.fn.matchadd('log_keywords', 'sending PINGREQ')
vim.fn.matchadd('log_keywords', 'received PINGRESP')
vim.fn.matchadd('log_keywords', '\\[KeyEventService\\] WAKE_REASON_BATTERY')
vim.fn.matchadd('log_keywords', '\\[KeyEventService\\] WAKE_REASON_SOS')
vim.fn.matchadd('log_keywords', '\\[KeyEventService\\] WAKE_REASON_R')
vim.fn.matchadd('log_keywords', '\\[KeyEventService\\] WAKE_REASON_MOTION')
vim.fn.matchadd('log_keywords', 'call_state')
vim.fn.matchadd('log_keywords', 'CALL_REPORT:')
vim.fn.matchadd('log_keywords', '\\[LED\\] BatteryLevel:')
vim.fn.matchadd('log_keywords', 'RunPlaybackCmd: Charging.wav')
-- syntax region  geofenceNoReport start=/^geo/ end=/$/ skip=/\\./
-- syntax region  geofenceReport start=/^geo. --false/ end=/$/ skip=/\\./

-- Set the color patterns for each type, actual colors are taken from color scheme
vim.api.nvim_set_hl(0, 'log_string', { link = 'String' })
vim.api.nvim_set_hl(0, 'log_number', { link = 'Number' })
vim.api.nvim_set_hl(0, 'log_date', { link = 'Type' })
vim.api.nvim_set_hl(0, 'log_time', { link = 'Type' })
vim.api.nvim_set_hl(0, 'log_error', { link = 'ErrorMsg' })
vim.api.nvim_set_hl(0, 'log_debug', { link = 'Directory' })
vim.api.nvim_set_hl(0, 'log_info', { link = 'SpecialKey' })
vim.api.nvim_set_hl(0, 'log_keywords', { link = 'Directory' })
vim.api.nvim_set_hl(0, 'log_daemon', { link = 'lCursor' })
vim.api.nvim_set_hl(0, 'log_linenumber', { link = 'MoreMsg' })
vim.api.nvim_set_hl(0, 'geofenceNoReport', { bg = '#ff0000', fg = '#000000' })
vim.api.nvim_set_hl(0, 'geofenceReport', { bg = '#5fd700', fg = '#000000' })
