-- autostart = true,
--   cmd = <1>{ "C:\\Users\\dlomax\\AppData\\Local\\nvim-data\\mason\\bin\\omnisharp.CMD" },
--   commands = <2>{},
--   config_def = <3>{
--     commands = <table 2>,
--     default_config = {
--       filetypes = <4>{ "cs", "vb" },
--       init_options = {},
--       on_new_config = <function 2>,
--       root_dir = <function 3>,
--       settings = {
--         FormattingOptions = <5>{
--           EnableEditorConfigSupport = true
--         },
--         MsBuild = <6>{},
--         RoslynExtensionsOptions = <7>{},
--         Sdk = <8>{
--           IncludePrereleases = true
--         }
--       }

return { }

-- V('Called omnisharp')
--
-- -- return {
-- --     settings{
-- --         default_config = {
-- --             filetypes = { 'cs', 'vb', 'csx' },
-- --         },
-- --     },
-- -- }
--
-- -- From https://github.com/joseph280996/neovim-config/blob/e6bec5a4cd56a6137ddc8f91c4c38d0253644084/lua/lsp/server_settings/omnisharp.lua#L91
-- local function get_omnisharp_cmd()
--     local mason_reg = require('mason-registry')
--     local package = mason_reg.get_package('omnisharp')
--
--     return package:get_install_path() .. '/omnisharp'
-- end
--
-- local function get_root_dir() return vim.fs.dirname(vim.fs.find({ '.gitignore', '.git', '*.sln', '.editorconfig' }, { upward = false })[1]) end
--
-- local function get_cmd()
--     local omnisharp_cmd = get_omnisharp_cmd()
--     local root_dir = get_root_dir()
--
--     return {
--         omnisharp_cmd,
--         '-s',
--         root_dir,
--         '--hostPID',
--         tostring(vim.fn.getpid()),
--         '--encoding',
--         'utf-8',
--         '--languageserver',
--     }
-- end
--
-- return {
--     autostart = true,
--     cmd = get_cmd(),
--     settings = {
--         MSBuild = {
--             enable = true,
--         },
--         FormattingOptions = {
--             EnableEditorConfigSupport = true,
--             OrganizeImports = true,
--             NewLine = '\n',
--             UseTabs = false,
--             TabSize = 4,
--             IndentationSize = 4,
--             SpacingAfterMethodDeclarationName = false,
--             SpaceWithinMethodDeclarationParenthesis = false,
--             SpaceBetweenEmptyMethodDeclarationParentheses = false,
--             SpaceAfterMethodCallName = false,
--             SpaceWithinMethodCallParentheses = false,
--             SpaceBetweenEmptyMethodCallParentheses = false,
--             SpaceAfterControlFlowStatementKeyword = false,
--             SpaceWithinExpressionParentheses = false,
--             SpaceWithinCastParentheses = false,
--             SpaceWithinOtherParentheses = false,
--             SpaceAfterCast = false,
--             SpacesIgnoreAroundVariableDeclaration = false,
--             SpaceBeforeOpenSquareBracket = false,
--             SpaceBetweenEmptySquareBrackets = false,
--             SpaceWithinSquareBrackets = false,
--             SpaceAfterColonInBaseTypeDeclaration = false,
--             SpaceAfterComma = false,
--             SpaceAfterDot = false,
--             SpaceAfterSemicolonsInForStatement = false,
--             SpaceBeforeColonInBaseTypeDeclaration = false,
--             SpaceBeforeComma = false,
--             SpaceBeforeDot = false,
--             SpaceBeforeSemicolonsInForStatement = false,
--             SpacingAroundBinaryOperator = 'single',
--             IndentBraces = false,
--             IndentBlock = false,
--             IndentSwitchSection = false,
--             IndentSwitchCaseSection = false,
--             IndentSwitchCaseSectionWhenBlock = false,
--             LabelPositioning = 'oneLess',
--             WrappingPreserveSingleLine = false,
--             WrappingKeepStatementsOnSingleLine = false,
--             NewLinesForBracesInTypes = false,
--             NewLinesForBracesInMethods = false,
--             NewLinesForBracesInProperties = false,
--             NewLinesForBracesInAccessors = false,
--             NewLinesForBracesInAnonymousMethods = false,
--             NewLinesForBracesInControlBlocks = false,
--             NewLinesForBracesInAnonymousTypes = false,
--             NewLinesForBracesInObjectCollectionArrayInitializers = false,
--             NewLinesForBracesInLambdaExpressionBody = false,
--             NewLineForElse = false,
--             NewLineForCatch = false,
--             NewLineForFinally = false,
--             NewLineForMembersInObjectInit = false,
--             NewLineForMembersInAnonymousTypes = false,
--             NewLineForClausesInQuery = false,
--         },
--         RoslynExtensionOptions = {
--             enableDecompilationSupport = true,
--         },
--     },
-- }
